name: plugin build

on:
  push:
    branches: github-actions

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - amd64
          - x86
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Prepare version.h
        shell: bash
        run: |
            git fetch --all
            echo "#define VERSION \"$(git describe --tags --long --always origin/master)\"" > version.h
            cat version.h

      - name: Build
        shell: cmd
        run: |
            mkdir output
            cd output
            cl.exe /c /Zi /nologo /W3 /WX- /diagnostics:column /sdl- /O2 /Oi /GL /D M_PI=3.141592653589793f /D VS_TARGET_OS_WINDOWS /D VS_TARGET_CPU_X86 /D _CRT_SECURE_NO_WARNINGS /D NDEBUG /D _WINDLL /D _UNICODE /D UNICODE /Gm- /EHsc /MT /GS- /Gy /fp:precise /permissive- /Zc:wchar_t /Zc:forScope /Zc:inline /Gd /TP /FC /errorReport:queue /I .. /I ..\include ..\plugin.cpp ..\expr\cpufeatures.cpp ..\expr\exprfilter.cpp ..\expr\vslog.cpp ..\expr\kernel\cpulevel.cpp
            mkdir release
            link.exe /ERRORREPORT:QUEUE /OUT:"release\libakarin.dll" /NOLOGO /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /OPT:REF /OPT:ICF /TLBID:1 /DYNAMICBASE /NXCOMPAT /FORCE:MULTIPLE /DLL plugin.obj cpufeatures.obj exprfilter.obj vslog.obj cpulevel.obj
            cd ..
            copy README.md output\release\
            copy COPYING.LESSER output\release\LICENSE

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: akarin-release-${{ matrix.arch }}
          #path: "output"
          path: "output/release"
